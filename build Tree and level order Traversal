#include <iostream>
#include<queue>
using namespace std;

class Node {
public:
  int data;
  Node *left;
  Node *right;

  Node(int data) {
    this->data = data;
    left = NULL;
    right = NULL;
  }
};

Node *BuildTree() {
  int data;
  cout << "enter the data:"<<endl;
  cin >> data;
  if (data == -1) {
    return NULL;
  }

  Node *root = new Node(data);

  cout << "enter data for the left partof " << data <<"node"<< endl;
  root->left = BuildTree();
  cout << "enter data for the right part of" << data<<"node" << endl;
  root->right = BuildTree();

  return root;
}

void levelOrderTraversal(Node* root){
  queue<Node*>q;
  q.push(root);
  q.push(NULL);
  while(!q.empty()){
  //step-1
    Node* temp=q.front();
   //step-2:
    q.pop();
    //step-3:
    if(temp==NULL){
      cout<<endl;
      if(!q.empty()){
        q.push(NULL);
      }
    }
    else{
       cout<< temp->data <<" ";
    //step-4:
    if(temp->left){
      q.push(temp->left);
    }
    if(temp->right){
      q.push(temp->right);
    }
    }
   
  }
}

int main() {

  Node *root = NULL;
  root = BuildTree();

  levelOrderTraversal(root);
  return 0;
}
