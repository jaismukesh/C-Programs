#include <iostream>
#include<stack>
#include<queue>
using namespace std;

void  ReverseKQueue(queue<int>&q,int k){
  int count =0;
  stack<int>s;
int n=q.size();

  if(k<0 || k>n)
    return;
  while(!q.empty()){
    int ele=q.front();
    q.pop();
    s.push(ele);
    count++;
    if(count==k){
      break;
    }
  }

  while(!s.empty()){
    int ele=s.top();
    s.pop();
    q.push(ele);
  }
  count=0;
  while(!q.empty() && n-k !=0){
    int ele=q.front();
    q.pop();
    q.push(ele);
    count++;

    if(count==n-k){
      break;
    }
  }
}

int main() {
  queue<int>q;
  q.push(10);
  q.push(30);
  q.push(40);
  q.push(50);

  ReverseKQueue(q,3);

  while(!q.empty()){
    cout<<q.front()<<" ";
    q.pop();
  }
  cout<<endl;
}
