#include <iostream>
#include<stack>
#include<queue>
using namespace std;

void interleaveQueue(queue<int>&q){
  int n=q.size();
  int k=n/2;
  int count=0;
  queue<int>q2;

  //step-1: push k element in the new queue.
  while(!q.empty()){
    int temp=q.front();
    q.pop();
    q2.push(temp);
    count++;

    if(count==k)break;
  }
//step-2: push one element from each queue to the original queue.

  while(!q.empty() && !q2.empty()){
    int first=q2.front();
    q2.pop();
    q.push(first);

    int second=q.front();
    q.pop();
    q.push(second);
  }
  if(n&1){
    int temp=q.front();
    q.pop();
    q.push(temp);
  }
}

int main() {
  queue<int>q;
  q.push(1);
  q.push(2);
  q.push(3);
  q.push(4);
  q.push(5);
  q.push(6);
  q.push(7);
  q.push(8);


 interleaveQueue(q);
  while(!q.empty()){
    cout<<q.front()<<" ";
    q.pop();
  }
  cout<<endl;
}
